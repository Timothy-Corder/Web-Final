@keyframes bounce {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(-10px);
    }
}

.genderSymbol {
    height: 1em;
}

.card {
    text-align: center;
    margin: auto;
    border-width: 0;
    min-width: 150px;
    max-width: 250px;
    width: 80%;
    aspect-ratio: 1 / 1.4;
    max-height: max-content;
    height: fit-content;
    transition: all 0.2s ease-out;
    /* Add position relative to contain absolute children */
    position: relative;
    /* Add padding to ensure content doesn't overflow */
    padding: 1rem;
    /* Add display flex to help with vertical alignment */
    display: flex;
    flex-direction: column;
}

.card:hover {
    transform: translateY(-20px);
}


#cardcontainer {
    background-size: 50%;
    display: grid;
    /* Change to use minmax with a maximum of 1fr and auto-fit to max-content */
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
    /* Add a maximum width based on desired column count */
    max-width: calc(300px * 5 + 80px); /* 4 columns * max card width + gap space */
    gap: 20px;
    width: 80vw;
    margin-left: auto;
    margin-right: auto;
    border-radius: calc(5vw + 5vh) calc(5vw + 5vh) 0 0;
    padding: 5%;
    min-height: 100%;
    height: fit-content;
}

.petPrimary, .petSecondary, .petHighlights, .petSclera, .petWhite {
    position: absolute;
    image-rendering: auto;
    /* Make size relative to container instead of fixed em value */
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

.petPrimary::after {
    background-color: var(--primaryColor);
}
.petSecondary::after {
    background-color: var(--secondaryColor);
}
.petHighlights::after {
    background-color: var(--highlightColor);
}
.petWhite::after {
    background-color: white;
}

.imgHolder .body {
    z-index: 5;
    background-image: var(--body);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}
.imgHolder .body::after {
    mask-image: var(--body);
}

.imgHolder .skin {
    z-index: 7;
    background-image: var(--skin);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}
.imgHolder .skin::after {
    mask-image: var(--skin);
}

.imgHolder .trait {
    z-index: var(--pos);
    background-image: var(--trait);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}
.imgHolder .trait::after {
    mask-image: var(--trait);
}

.imgHolder .eyes {
    z-index: 9;
    background-image: var(--eyes);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}
.imgHolder .eyes::after {
    mask-image: var(--eyes);
}

.imgHolder .petSclera {
    z-index: 10;
    background-image: var(--sclera);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}

.imgHolder *::after {
    position: absolute;
    left: 0;
    width: 100%;
    height: 100%;
    content: "";
    mix-blend-mode: multiply;
    pointer-events: none;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
}

.imgholder {
    position: relative;
    width: 100%;
    /* Set aspect ratio to maintain square shape */
    aspect-ratio: 1 / 1;
    margin: auto;
    /* Add flex properties to center content */
    display: flex;
    justify-content: center;
    align-items: center;
}

hr {
    margin: 0;
    width: 100%;
}

.pet-name {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    /* Remove the nowrap and overflow settings */
    width: 100%;
}

.pet-name h2 {
    /* Add text size adjustment */
    font-size: min(1.5em, calc(16px + (24 - 16) * ((100vw - 300px) / (1600 - 300))));
    /* Enable text scaling */
    transform-origin: left center;
    white-space: nowrap;
    width: 100%;
    text-align: center;
    /* Add transition for smooth size changes */
    transition: transform 0.2s ease-out;
}

/* Add JavaScript-free auto-scaling text */
@supports (-webkit-hyphens: none) {
    .pet-name h2 {
        width: fit-content;
        /* Start with no scaling */
        transform: scale(1);
    }
    
    /* Scale text if it overflows */
    .pet-name h2:hover {
        transform: scale(var(--scale, 0.8));
    }
}

.pet-name * {
    margin: 0;
}

.pixel * {
    image-rendering: pixelated;
}